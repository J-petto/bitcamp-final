/*
 * This source file was generated by the Gradle 'init' task
 */
package bitcamp.project;

import bitcamp.project.annotation.LoginUserArgumentResolver;
import bitcamp.project.interceptor.AuthInterceptor;
import lombok.RequiredArgsConstructor;
import org.mybatis.spring.annotation.MapperScan;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.PropertySource;
import org.springframework.transaction.annotation.EnableTransactionManagement;
import org.springframework.web.method.support.HandlerMethodArgumentResolver;
import org.springframework.web.servlet.config.annotation.InterceptorRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

import java.util.List;

@SpringBootApplication
@MapperScan("bitcamp.project.dao")
@PropertySource("file:${user.home}/config/final.properties")
@EnableTransactionManagement
public class App implements WebMvcConfigurer {

    private final AuthInterceptor authInterceptor;

    public App(AuthInterceptor authInterceptor) {
        this.authInterceptor = authInterceptor;
        System.getProperties().setProperty("aws.java.v1.disableDeprecationAnnouncement", "true");
    }

    public static void main(String[] args) {
        SpringApplication.run(App.class, args);
    }

    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(authInterceptor)
            .addPathPatterns("/**");
    }

    @Override
    public void addArgumentResolvers(List<HandlerMethodArgumentResolver> resolvers) {
        resolvers.add(new LoginUserArgumentResolver());
    }
}
